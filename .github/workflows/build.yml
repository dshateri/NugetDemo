name: Build

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}
  # Nuget source URL for GitHub Packages.
  NUGET_SOURCE_URL: "https://nuget.pkg.github.com/dshateri/index.json"
  # Project Path for the .NET CLI.
  PROJECT_PATH: "BlazorApp/BlazorApp.csproj"
  # output directory for the Nuget packages.
  OUTPUT_DIRECTORY: ${{ github.workspace }}\output

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "git fetch tags"
        run: git fetch --tags --force

      - name: "Install .NET 7 SDK"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: "Dotnet Tool Restore"
        run: dotnet tool restore
        
      - name: "Dotnet Nuget Add Source"
        run: dotnet nuget add source ${{ env.NUGET_SOURCE_URL }} --name GitHub --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
        
      - name: "Restore Dependencies"
        run: dotnet restore ${{ env.PROJECT_PATH }}
        
      - name: "Build"
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

      - name: "Pack"
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --no-build --no-restore --output ${{ env.OUTPUT_DIRECTORY }}

      - name: "Archive Artefacts"
        uses: actions/upload-artifact@v3
        with:
          name: "artifact"
          path: ${{ env.OUTPUT_DIRECTORY }}/*.nupkg
          
  push-github-packages:
    name: "Push GitHub Packages"

    needs: build

    if: github.ref == 'refs/heads/main' || github.event_name == 'release'

    environment:
      name: "GitHub Packages"
      url: https://github.com/dshateri/NugetDemo/packages

    permissions:
      packages: write

    runs-on: ubuntu-latest

    steps:
      - name: "Download Artefact"
        uses: actions/download-artifact@v3
        with:
          name: "ubuntu-latest"

      - name: "Dotnet NuGet Add Source"
        run: dotnet nuget add source ${{ env.NUGET_SOURCE_URL }} --name GitHub --username ${{github.actor}} --password ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text
        
      - name: "Dotnet NuGet Push"
        run: dotnet nuget push .\*.nupkg --api-key ${{ github.token }} --source GitHub --skip-duplicate